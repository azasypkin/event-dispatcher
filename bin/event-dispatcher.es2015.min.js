!function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={exports:{},id:o,loaded:!1};return e[o].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};t.m=e,t.c=n,t.p="",t(0)}([function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),i=function(e){if(!e||"string"!=typeof e)throw new Error("Event name should be a valid non-empty string!")},s=function(e){if("function"!=typeof e)throw new Error("Handler should be a function!")},l=function(e,t){if(e&&e.indexOf(t)<0)throw new Error('Event "'+t+'" is not allowed!')},a=Object.freeze({allowedEvents:Symbol("allowedEvents"),listeners:Symbol("listeners")}),f=function(){function e(t){if(n(this,e),void 0!==t&&!Array.isArray(t))throw new Error("Allowed events should be a valid array of strings!");this[a.listeners]=new Map,this[a.allowedEvents]=t}return r(e,[{key:"on",value:function(e,t){i(e),l(this[a.allowedEvents],e),s(t);var n=this[a.listeners].get(e);n||(n=new Set,this[a.listeners].set(e,n)),n.add(t)}},{key:"once",value:function e(t,n){var o=this;s(n);var e=function e(r){o.off(t,e),n.call(o,r)};this.on(t,e)}},{key:"off",value:function(e,t){i(e),l(this[a.allowedEvents],e),s(t);var n=this[a.listeners].get(e);n&&(n.delete(t),n.size||this[a.listeners].delete(e))}},{key:"offAll",value:function(e){if(void 0===e)return void this[a.listeners].clear();i(e),l(this[a.allowedEvents],e);var t=this[a.listeners].get(e);t&&(t.clear(),this[a.listeners].delete(e))}},{key:"emit",value:function(e,t){var n=this;i(e),l(this[a.allowedEvents],e);var o=this[a.listeners].get(e);o&&o.forEach(function(e){try{e.call(n,t)}catch(e){console.error(e)}})}},{key:"hasListeners",value:function(e){return i(e),l(this[a.allowedEvents],e),this[a.listeners].has(e)}}],[{key:"mixin",value:function(t,n){if(!t||"object"!==(void 0===t?"undefined":o(t)))throw new Error("Object to mix into should be valid object!");if(void 0!==n&&!Array.isArray(n))throw new Error("Allowed events should be a valid array of strings!");var r=new e(n);return["on","once","off","offAll","emit","hasListeners"].forEach(function(e){if(void 0!==t[e])throw new Error('Object to mix into already has "'+e+'" property defined!');"constructor"!==e&&(t[e]=r[e].bind(r))},r),t}}]),e}();t.default=f}]);